version: 0.2
env:
    variables:
        JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
phases:
    install:
        runtime-versions:
            java: openjdk8          
            docker: 18
    pre_build:    
        commands:
            - echo Installing maven..
            - apt-get update -y
            - apt-get install -y maven
            - echo Logging in to Amazon ECR...
            - aws --version
            - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            - REPOSITORY_URI=323988556933.dkr.ecr.us-east-1.amazonaws.com/stockwebapp
            - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
            - IMAGE_TAG=${COMMIT_HASH:=latest}
    build:
        commands:
            - echo Building..
            - mvn install
            - echo Build started on `date`
            - echo Building the Docker image...
            - docker build -t $REPOSITORY_URI:latest .
            - docker tag stockwebapp:latest $REPOSITORY_URI:$IMAGE_TAG
    post_build:
        commands:
          - echo Build completed on `date`
          - echo Pushing the Docker images...
          - docker push stockwebapp:latest
          - docker push stockwebapp:$IMAGE_TAG
          - echo Writing image definitions file...
          - printf '[{"name":"HistoryContainer","imageUri":"%s"}]' stockwebapp:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files:
        - target/*.jar
        - imagedefinitions.json
    discard-paths: yes
cache:
    paths:
        - '/root/.m2/**/*'

